- include_vars: "{{ ansible_distribution }}.yml"
- name: create paths
  tags: "install,file"
  file:
    path: /etc/btrbk 
    owner: root 
    group: root
    state: directory 
- name: create paths
  tags: "install,file"
  file:
    path: /etc/btrbk_logger 
    owner: root 
    group: root
    state: directory 

- name: copy btrbk file
  become_user: root
  tags: "btrbk,install,backup"
  copy:
    src: ./tasks/files/btrbk.conf
    dest: /etc/btrbk/btrbk.conf
    owner: root
    group: root
- name: copy btrbk_pac file
  become_user: root
  tags: "btrbk,install,backup"
  copy:
    src: ./tasks/files/btrbk_pac.conf
    dest: /etc/btrbk/btrbk_pac.conf
    owner: root
    group: root
#- name: set root owner
#  tags: "install,file,btrbk"
#  ansible.builtin.file:
#    path: 
#      - /etc/btrbk/btrbk.conf 
#      - /etc/btrbk/btrbk_pac.conf
#    owner: root 
#    group: root
#    mode: 0644
#    state: file
- name: copy btrbk_logger
  tags: "btrbk_logger,install,backup"
  copy:
    src: ./tasks/files/btrbk_logger.conf 
    dest: /etc/btrbk_logger/ 
    owner: root
    group: root 
- name: make .dotfiles dir
  become_user: jaziel
  file: 
    path: $HOME/.dotfiles
    owner: jaziel
    group: jaziel
    state: directory

- name: git clone yay-bin repo in to /tmp
  become: no
  git:
    repo: 'https://github.com/jaziel826/.dotfiles.git'
    dest: $HOME/.dotfiles
    clone: yes
#- name: create paths
#  become_user: jaziel
#  tags: "install,dotfiles,file"
#  file:
#    path: $HOME/.dotfiles/files
#    owner: jaziel
#    group: jaziel
#    state: directory 
#
#- name: cp dotfiles
#  become_user: jaziel 
#  tags: "install,dotfiles"
#  copy:
#    src: './files/{{ item }}'
#    dest: $HOME/.dotfiles/files
#    owner: jaziel
#    group: jaziel
#  with_items:  
#    - alacritty
#    - btop
#    - lf
#    - mako
#    - networkmanager-dmenu
#    - polybar
#    - polybar_old
#    - rofi
#    - starship
#    - sway
#    - swaync
#    - ulauncher
#    - wall
#    - waybar
#    - tmux
#    - vim
#    - bash
#    - foot
#    - ctpv
#    - wluma
#    - fuzzel
#    - tofi
- name: Check if file is not a symbolic link
  stat:
    path: $HOME/.bashrc
  register: file_stat

- name: back up .bashrc
  become_user: jaziel
  shell: mv $HOME/.bashrc $HOME/.bashrc.bk
  when: file_stat.stat.islink is not defined or file_stat.stat.islink == false

- name: stow dotfiles
  become_user: jaziel
  tags: "install,stow"
  stow:
    state: latest
    package: "{{ item }}"
    dir: $HOME/.dotfiles/files
    target: $HOME
  with_items:  
    - alacritty
    - btop
    - lf
    - lobster
    - mako
    - networkmanager-dmenu
    - nvim
    - polybar
    - polybar_old
    - rofi
    - starship
    - sway
    - swaync
    - ulauncher
    - wall
    - waybar
    - wlogout
    - tmux
    - vim
    - hypr
    - bash
    - foot
    - ctpv
    - wluma
    - fuzzel
    - zellij

- name: create truenas paths
  tags: "install,file"
  file:
    path: /mnt/truenas
    owner: root 
    group: root
    state: directory 

- name: add line to auto.master
  ansible.builtin.lineinfile:
    path: '{{ auto_master }}'
    line: /mnt/truenas /etc/autofs.nfs --ghost --timeout=60
    owner: root
    group: root
    create: no

- name: add lin to autofs.nfs
  ansible.builtin.lineinfile:
    path: /etc/autofs.nfs
    line: vorta -fstype=nfs4,rw truenas.local:/mnt/ssd-storage/docker/vorta
    owner: root
    group: root
    create: yes

- name: Restart service autofs, in all cases
  ansible.builtin.service:
    name: autofs
    state: restarted
